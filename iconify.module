<?php

/**
 * @file
 * Contains iconify.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\iconify\IconifyIconize;
use Drupal\iconify\Entity\Iconify;

/**
 * Implements hook_help().
 */
function iconify_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the iconify module.
    case 'help.page.iconify':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('IcoMoon icon manager.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function iconify_theme($existing, $type, $theme, $path) {
  $themes = array();
  $themes['iconify'] = array(
    'render element' => 'elements',
    'file' => 'iconify.page.inc',
    'template' => 'iconify',
  );
  $themes['iconify_icon_list'] = array(
    'render element' => 'iconify',
    'file' => 'iconify.page.inc',
    'template' => 'iconify-icon-list',
  );
  return $themes;
}

/**
 * Implements hook_element_info_alter().
 */
function iconify_element_info_alter(array &$types) {
  if (isset($types['html'])) {
    $types['html']['#attached']['library'][] = 'iconify/iconify';
  }
}

/**
 * Implements hook_library_info_alter().
 *
 * Adds IcoMoon stylesheets to the iconify library.
 */
function iconify_library_info_alter(&$libraries, $extension) {
  if ($extension === 'iconify') {
    foreach (iconify_load_active() as $icon_package) {
      $libraries['iconify']['dependencies'][] = 'iconify/iconify.' . $icon_package->id();
    }
  }
}

/**
 * Implements hook_library_info_build().
 */
function iconify_library_info_build() {
  $libraries = [];
  foreach (iconify_load_all() as $icon_package) {
    $libraries['iconify.' . $icon_package->id()]['css']['theme'][$icon_package->getStylesheet()] = [];
  }
  return $libraries;
}

/**
 * A drop-in replacement for the t() function from core.
 *
 * @ingroup sanitization
 */
function iconify($string, array $args = array(), array $options = array()) {
  return new IconifyIconize($string, $args, $options);
}

/**
 * Return all active Iconifys.
 *
 * @return array
 *   An array of entity objects indexed by their IDs.
 */
function iconify_load_all() {
  return Iconify::loadAll();
}

/**
 * Return all active Iconifys.
 *
 * @return array
 *   An array of entity objects indexed by their IDs.
 */
function iconify_load_active() {
  return Iconify::loadActive();
}

/**
 * [iconify_load description]
 *
 * @param [string] $id
 *   The machine name of the Iconify.
 *
 * @return \Drupal\iconify\Entity\Iconify
 *   The Iconify entity object.
 */
function iconify_load($id) {
  return Iconify::load($id);
}
